generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum UserRole {
    Student         @map("student")
    Faculty         @map("faculty")
    Administrator   @map("administrator")
}

model User {
    id          Int             @unique @default(autoincrement())
    email       String          @unique
    password    String          // hashed

    role        UserRole 
    session     Int             @default(0)

    student     StudentUser?
    faculty     FacultyUser?

    createdAt   DateTime        @default(now())
    updatedAt   DateTime        @updatedAt
}

enum StudentScholasticStatus {
    Regular
    Irregular
    Returnee
}

model StudentUser {
    id          Int                         @unique @default(autoincrement())
    user        User                        @relation(fields: [userId], references: [id])
    userId      Int                         @unique
    studentNo   String                      @unique
    name        String
    year        Int                         @default(1)
    section     Int                         @default(0)
    courses     CourseEnrollment[]
    status      StudentScholasticStatus     @default(Regular)
}

model FacultyUser {
    id          Int         @unique @default(autoincrement())
    user        User        @relation(fields: [userId], references: [id])
    userId      Int         @unique
    name        String
    courses     Course[]
}

model Course {
    id              Int             @unique @default(autoincrement())
    code            String          @unique
    name            String
    faculty         FacultyUser     @relation(fields: [facultyId], references: [id])
    facultyId       Int             @unique
    
    schedules       CourseSchedule[]
}

model CourseSchedule {
    id              Int                     @unique @default(autoincrement())
    course          Course                  @relation(fields: [courseId], references: [id])
    courseId        Int                     @unique  

    schedule        DateTime
    
    enrollments     CourseEnrollment[]
}

model CourseEnrollment {
    id              Int                 @unique @default(autoincrement())
    courseSched     CourseSchedule      @relation(fields: [courseSchedId], references: [id])
    courseSchedId   Int                 @unique
    student         StudentUser         @relation(fields: [studentId], references: [id])
    studentId       Int                 @unique

    enrolledAt      DateTime            @default(now())
    grade           Float               @default(0.00)
}
